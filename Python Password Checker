import requests # for requesting data
import hashlib # for hashing data
import sys

def request_api_data(query_char):
    url = 'https://api.pwnedpasswords.com/range/' + query_char
    response = requests.get(url)
    if response.status_code != 200:
        raise RuntimeError(f'Error fetching: {response.status_code}', 'API could not be loaded, Re-try or check if the API is correct.')
    return response

def get_password_leaks_count(hashes, hash_to_check):
    hashes = (line.split(':') for line in hashes.text.splitlines()) # Splits the hash which separates the hash and the integer count for the times hacked.
    for h, count in hashes:
        if h == hash_to_check:  # If the hash is equal to remaining chars
            return count
    return 0

def pwn_api_check(password): # Check pwnedpassword's database to see if a password has been compromised.
    sha1password = hashlib.sha1(password.encode('utf-8')).hexdigest().upper()  # For encoding and converting password to hash
    first5_char, remaining_chars = sha1password[:5], sha1password[5:]
    response = request_api_data(first5_char)
    return get_password_leaks_count(response, remaining_chars)
    
   
def main(args):
    check_a_password = True
    while check_a_password == True:
       for password in args:
          count = pwn_api_check(password)
          if count:
              print(f'{password} has been hacked {count} times....you should probably change that.')
          else:
              print(f'{password} has never been found. What a great password!')
        check_again = input('Press any other key to exit or press Y to check another password.')
        if check_again == 'Y':
          print("Okay. Enter a password to check.")
        else:
          print("Have a great day!")
          check_a_password = False
    return 'Finished!'


if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))  
    # Exits the program 
